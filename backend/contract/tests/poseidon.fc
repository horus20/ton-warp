_ __test_tuple() {
  tuple a = empty_tuple();

  var i = 0;
  while(i < 255) {
    a~tpush(i);

    i += 1;
  }

  return a.length();
}

_ __test_q_const() {
  var qOrg = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
  var a = long(qOrg);
  ;;var a = long(0x9c46e9ec68e9bd4fe1faaba294cba38a71aa177534cdd1b6c7dc0dbd0abd7a7);

  var q = unsafe_tuple([4891460686036598785, 2896914383306846353, 13281191951274694749, 3486998266802970665]);
  var r = unsafe_tuple([1997599621687373223, 6052339484930628067, 10108755138030829701, 150537098327114917]);

  var inr = unsafe_tuple([12436184717236109307, 3962172157175319849, 7381016538464732718, 1011752739694698287]);

  ;;return [a, longToInt(r)];
  return [a, qOrg, longToInt(q), longToInt(r), longToInt(inr)];
}

_ __test_long() {
  var a = 0x9c46e9ec68e9bd4fe1faaba294cba38a71aa177534cdd1b6c7dc0dbd0abd7a7;
  var r = long(a);
  var b = longToInt(r);
  ;;int a = 10000;
  ;; convert int to BigInt
  {-var (int gas_used1, stack) = invoke_method(long, [a]);
  [int bi] = stack;

  ;; convert BigInt to int
  var (int gas_used2, stack) = invoke_method(longToInt, [bi]);
  [int b] = stack;-}
  throw_if(10003, b != a);

  return [r];
}

_ __test_long_sum_mul() {
  int a = 0x9c46e9ec68e9bd4fe1faaba294cb;
  ;;int a = 100000;
  ;; convert int to BigInt
  var bi = long(a);
  var mm = long(2);

  ;; sum = bi + bi
  tuple sum = longSum(bi, bi);
  ;; mul = bi * 2
  tuple mul = longMul(bi, mm);

  throw_if(10004, longToInt(sum) != longToInt(mul));
  return [bi];
}

_ __test_long_mul() {
  var a = long(60606060);
  var b = long(2252022002);

  var res = longMul(a, b);

  var intRes = longToInt(res);
  throw_if(10009, intRes != 136486180574532120);

  ;;return [a, 888 , b, 888, res, 888, longToInt(res)];
  return [res];
}

_ __test_long_mul_big() {
  int a = 0x9c46e9ec68e9bd4fe1faaba294cba38a71aa177534cdd1b6c7dc0dbd0abd7a79;
  ;;int a = 1000;
  ;; convert int to BigInt
  var (_, stack) = invoke_method(long, [a]);
  [int bi] = stack;

  ;; mul = bi * bi * bi * bi * bi
  var (_, stack) = invoke_method(longMul, [bi, bi]);
  [tuple bi2] = stack;
  var (_, stack) = invoke_method(longMul, [bi2, bi2]);
  [tuple bi4] = stack;
  var (_, stack) = invoke_method(longMul, [bi4, bi]);
  [tuple bi5] = stack;

  return [bi, bi5];
  ;;return bi2;
}

_ _test_long_huge() {
  var a = long (0xffffffffffffffffffffffffffffffff1234568132165432168464561);
  var res = long(1);
  while (res.length() < 150) {
    res = longMul(res, a);
  }

  return [res.length()];
}

_ __test_sigma() {
  var a = long(0x9c46e9ec68e9bd4fe1faaba294cba38a71aa177534cdd1b6c7dc0dbd0abd7a79);

  return longToInt(sigmaFunction(a));
}

{-
_ __test_mod() {
  tuple data = unsafe_tuple([1]);
  var mm1 = toMod(data);
  var mm2 = fromMod(mm1);

  return [mm1, mm2];
}-}

_ __test_mul_generic() {
  var x = unsafe_tuple([1, 0, 0, 0]);
  var y = unsafe_tuple([1997599621687373223, 6052339484930628067, 10108755138030829701, 150537098327114917]);

  tuple res = mulGeneric(x, y);

  ;; res mut be [ 12436184717236109307 3962172157175319849 7381016538464732718 1011752739694698287 ]
  throw_if(10010, res.getByIndex(0) != 12436184717236109307);
  throw_if(10011, res.getByIndex(1) != 3962172157175319849);
  throw_if(10012, res.getByIndex(2) != 7381016538464732718);
  throw_if(10013, res.getByIndex(3) != 1011752739694698287);

  return res;
}

_ __test_c_0() {
  var c = long(0x9c46e9ec68e9bd4fe1faaba294cba38a71aa177534cdd1b6c7dc0dbd0abd7a7);
  var y = unsafe_tuple([1997599621687373223, 6052339484930628067, 10108755138030829701, 150537098327114917]);

  var res = mulGeneric(c, getR());

  throw_if(10014, res.getByIndex(0) != 12208208821504100967);
  throw_if(10015, res.getByIndex(1) != 8352786714756315675);
  throw_if(10016, res.getByIndex(2) != 13931969323734133734);
  throw_if(10017, res.getByIndex(3) != 169165012173077633);

  return [res, longToInt(res)];
}

_ __test_c_1() {
  var c = long(0x25f99a9198e923167bba831b15fffd2d7b97b3a089808d4eb1f0a085bee21656);
  var y = unsafe_tuple([1997599621687373223, 6052339484930628067, 10108755138030829701, 150537098327114917]);

  var res = mulGeneric(c, getR());

  throw_if(10018, res.getByIndex(0) != 5610801504455137016);
  throw_if(10019, res.getByIndex(1) != 8304286707549454946);
  throw_if(10020, res.getByIndex(2) != 13050992117822782841);
  throw_if(10021, res.getByIndex(3) != 5497750686485388);

  return [res, longToInt(res)];
}

_ __test_add() {
  var x = unsafe_tuple([12436184717236109307, 3962172157175319849, 7381016538464732718, 1011752739694698287]);
  var y = unsafe_tuple([11069586816774575342, 4040526433733796225, 17421914956921628469, 2101459233408232249]);

  var res = addGeneric(x, y);

  throw_if(10022, res.getByIndex(0) != 5059027460301133033);
  throw_if(10023, res.getByIndex(1) != 8002698590909116075);
  throw_if(10024, res.getByIndex(2) != 6356187421676809571);
  throw_if(10025, res.getByIndex(3) != 3113211973102930537);

  return [res, longToInt(res)];
}

_ __test_poseidon_run_one() {
  tuple data = unsafe_tuple([1]);
  var res = poseidon(data);
  throw_if(11000, res != 18586133768512220936620570745912940619677854269274689475585506675881198879027);

  return res;
}

_ __test_poseidon_run_two() {
  tuple data = unsafe_tuple([1, 2]);
  var res = poseidon(data);
  throw_if(11000, res != 7853200120776062878684798364095072458815029376092732009249414926327459813530);

  return res;
}

_ __test_poseidon_other() {
  tuple data = unsafe_tuple([18586133768512220936620570745912940619677854269274689475585506675881198879027]);
  var res = poseidon(data);
  throw_if(11001, res != 17744324452969507964952966931655538206777558023197549666337974697819074895989);

  data = unsafe_tuple([21888242871839275222246405745257275088548364400416034343698204186575808495617]);
  var gas_used = invoke_method_expect_fail(poseidon, [data]);

  data = unsafe_tuple([1, 2]);
  res = poseidon(data);
  throw_if(11002, res != 7853200120776062878684798364095072458815029376092732009249414926327459813530);

  data = unsafe_tuple([3, 4]);
  res = poseidon(data);
  throw_if(11002, res != 14763215145315200506921711489642608356394854266165572616578112107564877678998);

  return res;
}
